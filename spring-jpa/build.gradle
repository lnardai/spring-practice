sourceSets {
    integration {
        java.srcDir 'src/it/'
        resources.srcDir 'src/it/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

test {
    useJUnitPlatform {
        excludeTags 'slow'
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    failFast = true
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
    }

    compile("com.h2database:h2")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")


    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-api:${jUnitVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${jUnitVersion}")
    testCompile("org.junit.vintage:junit-vintage-engine:${jUnitVersion}")

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
}


task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    testLogging {
        events "passed", "skipped", "failed"
    }
}